// ** TxCommEventName Class ** //
// Autogenerated in main_create_cmds.cpp from cmds_format.json ** //
// Manzano Software //

#ifndef _MZN_CMD_TX_COMM_EVENT_NAME_H
#define _MZN_CMD_TX_COMM_EVENT_NAME_H

#include "command.h"

namespace mzn {

// -------------------------------------------------------------------------- //
class TxCommEventName : public Command {

friend std::ostream & operator<<(std::ostream & cmd_os, TxCommEventName const & cmd);

public:

    explicit TxCommEventName();
    ~TxCommEventName() = default;

    TxCommEventName(TxCommEventName && rhs) = default;
    TxCommEventName & operator=(TxCommEventName && rhs) = default;
    TxCommEventName(TxCommEventName const & rhs) = default;
    TxCommEventName & operator=(TxCommEventName const & rhs) = default;
    std::string const cmd_name = "tx_comm_event_name";

    CmdField<uint8_t> event_number;
    CmdFieldPstring<0> event_name;

    uint16_t msg_to_data(std::vector<uint8_t> const & msg,
                         uint16_t mf_begin) override;

    uint16_t data_to_msg(std::vector<uint8_t> & msg,
                         uint16_t mf_begin) const override;

private:

    std::ostream & os_print(std::ostream & cmd_os) const override;
};


inline std::ostream & operator<<(std::ostream & cmd_os, TxCommEventName const & cmd) {
    return cmd.os_print(cmd_os);
}

} // end namespace
#endif // _MZN_CMD_TX_COMM_EVENT_NAME_H
