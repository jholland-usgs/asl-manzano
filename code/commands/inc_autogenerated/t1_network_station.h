// ** T1NetworkStation Class ** //
// Autogenerated in main_create_cmds.cpp from cmds_format.json ** //
// Manzano Software //

#ifndef _MZN_CMD_T1_NETWORK_STATION_H
#define _MZN_CMD_T1_NETWORK_STATION_H

#include "command.h"

namespace mzn {

// -------------------------------------------------------------------------- //
class T1NetworkStation : public Command {

friend std::ostream & operator<<(std::ostream & cmd_os, T1NetworkStation const & cmd);

public:

    explicit T1NetworkStation();
    ~T1NetworkStation() = default;

    T1NetworkStation(T1NetworkStation && rhs) = default;
    T1NetworkStation & operator=(T1NetworkStation && rhs) = default;
    T1NetworkStation(T1NetworkStation const & rhs) = default;
    T1NetworkStation & operator=(T1NetworkStation const & rhs) = default;
    std::string const cmd_name = "t1_network_station";

    CmdFieldArrayChar<2> network;
    CmdFieldArrayChar<5> station;

    uint16_t msg_to_data(std::vector<uint8_t> const & msg,
                         uint16_t mf_begin) override;

    uint16_t data_to_msg(std::vector<uint8_t> & msg,
                         uint16_t mf_begin) const override;

private:

    std::ostream & os_print(std::ostream & cmd_os) const override;
};


inline std::ostream & operator<<(std::ostream & cmd_os, T1NetworkStation const & cmd) {
    return cmd.os_print(cmd_os);
}

} // end namespace
#endif // _MZN_CMD_T1_NETWORK_STATION_H
